// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spg.SpengerSearch.DomainModel.Infrastructure;

#nullable disable

namespace Spg.SpengerSearch.DomainModel.Migrations
{
    [DbContext(typeof(SpengerSearchContext))]
    partial class SpengerSearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryTypeKey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShopNavigationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTypeKey");

                    b.HasIndex("ShopNavigationId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.CategoryType", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("CategoryType");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RegistrationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Product", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ean13")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryNavigationId1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name", "Ean13");

                    b.HasIndex("CategoryNavigationId1");

                    b.HasIndex("Name", "Ean13");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CatchPhrase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanySuffix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Category", b =>
                {
                    b.HasOne("Spg.SpengerSearch.DomainModel.Model.CategoryType", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryTypeKey");

                    b.HasOne("Spg.SpengerSearch.DomainModel.Model.Shop", "ShopNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("ShopNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopNavigation");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Customer", b =>
                {
                    b.OwnsOne("Spg.SpengerSearch.DomainModel.Model.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("StreetName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Zip")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Product", b =>
                {
                    b.HasOne("Spg.SpengerSearch.DomainModel.Model.Category", "CategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("CategoryNavigationId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Shop", b =>
                {
                    b.OwnsOne("Spg.SpengerSearch.DomainModel.Model.Address", "Address", b1 =>
                        {
                            b1.Property<int>("ShopId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("StreetName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Zip")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ShopId");

                            b1.ToTable("Shops");

                            b1.WithOwner()
                                .HasForeignKey("ShopId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.CategoryType", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Spg.SpengerSearch.DomainModel.Model.Shop", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
